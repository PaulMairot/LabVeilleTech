<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Laboratoire de Veille Technologique - Paul</title><link>https://paulmairot.github.io/LabVeilleTech/</link><description>Laboratoire de Veille Technologique - Paul</description><generator>Hugo -- gohugo.io</generator><language>fr-CH</language><lastBuildDate>Sun, 29 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://paulmairot.github.io/LabVeilleTech/index.xml" rel="self" type="application/rss+xml"/><item><title>Mon système de veille</title><link>https://paulmairot.github.io/LabVeilleTech/post/system/</link><pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/system/</guid><description>&lt;p>Au travers du cours Laboratoire de Veille Technologique, plusieurs outils nous ont été proposés afin de mettre en place notre premier système de veille. Voici le miens.&lt;/p>
&lt;h1 id="les-sources-" >Les sources ?
&lt;span>
&lt;a href="#les-sources-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>En se basant sur mon domaine décrit dans la page à propos j&amp;rsquo;ai pu lister un ensemble de sources d&amp;rsquo;informations, voici quelques exemples :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.30secondsofcode.org/">30 seconds of code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://css-tricks.com/">CSS-Tricks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/">DEV Community&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sitepoint.com/">SitePoint&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="récupérer-linformation-et-la-consommer" >Récupérer l&amp;rsquo;information et la consommer
&lt;span>
&lt;a href="#r%c3%a9cup%c3%a9rer-linformation-et-la-consommer">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Après avoir déterminer ces sources d&amp;rsquo;informations, il était alors question de comment cette information allait me parvenir. Je me suis alors orienté vers les feeds RSS, la grande majorité des sources choisies précédemment le proposant.&lt;/p>
&lt;blockquote>
&lt;p>Un flux RSS est un moyen de s&amp;rsquo;abonner à un grand nombre de site d&amp;rsquo;acualité pour recevoir directement tous les articles qu&amp;rsquo;ils publient.&lt;/p>
&lt;/blockquote>
&lt;p>J&amp;rsquo;ai alors opté pour l&amp;rsquo;application &lt;a href="https://feedly.com">Feedly&lt;/a>, que je connaissais déjà, afin de pouvoir visualiser les flux choisis.&lt;/p>
&lt;h1 id="garder-linformation-dans-le-temps" >Garder l&amp;rsquo;information dans le temps
&lt;span>
&lt;a href="#garder-linformation-dans-le-temps">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>Malgré le fait que l&amp;rsquo;application Feedly permette de sauvegarder des articles, il me fallais un autre moyen de les concerver afin que ceux-ci ne disparaissent pas sans prévenir. J&amp;rsquo;ai alors trouvé une solution me permettant de connecter mon compte Feedly à mon Notion.&lt;/p>
&lt;p>Cette solution est celle de &lt;a href="https://zapier.com/apps/feedly/integrations/notion">Zapier&lt;/a>. J&amp;rsquo;ai alors pu créer un automatisation afin que dès lors où je sauvegarde un article sur Feedly, celui-ci se trouve directement dans une base de données Notion.&lt;/p></description></item><item><title>Article : More Real-World Uses for :has()</title><link>https://paulmairot.github.io/LabVeilleTech/post/css-has/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/css-has/</guid><description>&lt;p>Comment utiliser la pseudo-classe CSS &amp;lsquo;has&amp;rsquo; pour créer des styles conditionnels basés sur la structure du DOM&lt;/p>
&lt;h2 id="résumé-de-larticle" >Résumé de l&amp;rsquo;article
&lt;span>
&lt;a href="#r%c3%a9sum%c3%a9-de-larticle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>L&amp;rsquo;article décrit en détail comment la pseudo-classe CSS &amp;ldquo;has&amp;rdquo; peut être utilisée pour créer des styles conditionnels en se basant sur la structure du DOM. Il explique comment &amp;ldquo;has&amp;rdquo; peut être utilisé pour améliorer l&amp;rsquo;expérience utilisateur en fournissant plusieurs exemples concrets. L&amp;rsquo;un des exemples les plus importants montre comment &amp;ldquo;has&amp;rdquo; peut être utilisé pour changer la couleur d&amp;rsquo;un lien lorsqu&amp;rsquo;il est activé. D&amp;rsquo;autres exemples incluent la modification de la mise en page en fonction de la présence d&amp;rsquo;un élément spécifique, ainsi que la mise en œuvre d&amp;rsquo;interactions telles que les hover en utilisant &amp;ldquo;has&amp;rdquo;. En général, l&amp;rsquo;article montre comment &amp;ldquo;has&amp;rdquo; peut être utilisé pour améliorer la navigation, la mise en page et l&amp;rsquo;accessibilité en fournissant des solutions concrètes à des problèmes fréquents rencontrés par les développeurs front-end.&lt;/p>
&lt;p>&lt;a href="https://css-tricks.com/more-real-world-uses-for-has/">Lien vers l&amp;rsquo;article complet&lt;/a>&lt;/p>
&lt;h2 id="ce-qui-ma-plu" >Ce qui m&amp;rsquo;a plu
&lt;span>
&lt;a href="#ce-qui-ma-plu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>L&amp;rsquo;article présente une partie concernant la mise en place d&amp;rsquo;un menu de site. J&amp;rsquo;ai trouvé que cette partie pouvait s&amp;rsquo;appliquer à 80% des sites que j&amp;rsquo;ai déjà pu concevoir et que ceci aurait été un jeu d&amp;rsquo;enfant avec la solution proposé par l&amp;rsquo;article.&lt;/p>
&lt;h2 id="quand-cela-me-sera-t-il-utile-" >Quand cela me sera-t-il utile ?
&lt;span>
&lt;a href="#quand-cela-me-sera-t-il-utile-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Les solutions proposées par cet article me seront utiles dans tous mes futurs projets web afin de simplifer la partie CSS.&lt;/p></description></item><item><title>Article : Beyond Console.log() – Level up Your Debugging Skills</title><link>https://paulmairot.github.io/LabVeilleTech/post/console-log/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/console-log/</guid><description>&lt;p>Différentes techniques de débogage pour améliorer les compétences de développement en JavaScript.&lt;/p>
&lt;h2 id="résumé-de-larticle" >Résumé de l&amp;rsquo;article
&lt;span>
&lt;a href="#r%c3%a9sum%c3%a9-de-larticle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>L&amp;rsquo;article &amp;ldquo;Beyond console.log: Level Up Your Debugging Skills&amp;rdquo; vise à aider les développeurs à améliorer leurs compétences de débogage en JavaScript. Il explique comment utiliser des outils tels que la console JavaScript, les déclarations de breakpoints, les outils de débogage de navigateur, les outils de débogage de réseau, les outils de débogage de performance et les outils de débogage de source pour résoudre les erreurs et optimiser le code.&lt;/p>
&lt;p>La console JavaScript est un outil puissant qui permet de loguer des informations dans la console du navigateur. Il permet de loguer des messages, des objets, des tableaux, etc. Les déclarations de breakpoints permettent de mettre en pause l&amp;rsquo;exécution du code à un endroit spécifique pour pouvoir inspecter les variables et les propriétés de l&amp;rsquo;objet. Les outils de débogage de navigateur sont intégrés à la plupart des navigateurs modernes et permettent de déboguer le code JavaScript, d&amp;rsquo;inspecter les éléments HTML et CSS, de visualiser les requêtes réseau et de mesurer les performances.&lt;/p>
&lt;p>&lt;a href="https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/">Lien vers l&amp;rsquo;article complet&lt;/a>&lt;/p>
&lt;h2 id="ce-que-jai-découvert" >Ce que j&amp;rsquo;ai découvert
&lt;span>
&lt;a href="#ce-que-jai-d%c3%a9couvert">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Comme beaucoup de monde, je n&amp;rsquo;utilise partiquement que la simple commande &lt;code>console.log()&lt;/code>. Cet article met alors en lumière toutes les autres fonctions de la console. La partie sur &lt;code>console.time()&lt;/code> m&amp;rsquo;était inconnue et est utile dans nombreux projets.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">time&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;go&amp;#39;&lt;/span>);
&lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">200000&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Math.&lt;span style="color:#a6e22e">random&lt;/span>()&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2000&lt;/span>;
}
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">timeEnd&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;go&amp;#39;&lt;/span>); &lt;span style="color:#75715e">// go: 11.7861328125 ms
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="quand-cela-me-sera-t-il-utile-" >Quand cela me sera-t-il utile ?
&lt;span>
&lt;a href="#quand-cela-me-sera-t-il-utile-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Dans tous mes futurs projets, cet article me sera utile lors de la partie de débogage. Celui-ci me permettra de mieux structurer mes commandes console et ainsi optimiser la recherche de bugs éventuels dans mes développment.&lt;/p></description></item><item><title>Article : Writing Cleaner JavaScript with Modules</title><link>https://paulmairot.github.io/LabVeilleTech/post/js-module/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/js-module/</guid><description>&lt;p>Comment les modules permettent de séparer le code en différentes sections logiques, de réduire les risques de conflits de nom et de faciliter la réutilisation de code.&lt;/p>
&lt;h2 id="résumé-de-larticle" >Résumé de l&amp;rsquo;article
&lt;span>
&lt;a href="#r%c3%a9sum%c3%a9-de-larticle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>L&amp;rsquo;article &amp;ldquo;Writing Cleaner JavaScript with Modules&amp;rdquo; explique comment l&amp;rsquo;utilisation des modules en JavaScript peut aider à écrire du code plus propre et plus organisé. Les modules permettent de séparer le code en sections logiques distinctes, réduisent les risques de conflits de nom et facilitent la réutilisation de code. Il décrit les différentes options disponibles pour utiliser les modules en JavaScript, tels que CommonJS, AMD et ECMAScript 6. Il donne des exemples concrets pour montrer comment utiliser les modules pour améliorer la qualité du code. Il insiste sur l&amp;rsquo;importance d&amp;rsquo;utiliser les modules pour écrire un code plus propre et plus maintenable. Il mentionne que les modules permettent de rendre le code plus facile à lire et à comprendre en permettant de découper les fonctionnalités en morceaux plus petits et plus gérables. Il conclut en disant que les modules sont un outil essentiel pour écrire du code JavaScript plus propre et plus facile à maintenir. Il encourage les développeurs à utiliser les modules pour écrire du code de meilleure qualité.&lt;/p>
&lt;p>&lt;a href="https://dev.to/honeybadger/writing-cleaner-javascript-with-modules-an">Lien vers l&amp;rsquo;article complet&lt;/a>&lt;/p>
&lt;h2 id="ce-quil-faut-retenir" >Ce qu&amp;rsquo;il faut retenir
&lt;span>
&lt;a href="#ce-quil-faut-retenir">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Les modules sont des outils puissants lors du développement. Dans une grande majorité de projets, leur utilisation permettra de mieux structurer le code afin que celui-ci soit plus facile d&amp;rsquo;utilisation et propre.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// user sign in
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">userSignIn&lt;/span>() {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;User signed in&amp;#34;&lt;/span>);
}
&lt;span style="color:#75715e">// user sign out
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">userSignOut&lt;/span>() {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;User signed out&amp;#34;&lt;/span>);
}
&lt;span style="color:#75715e">// delete task
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">deleteTask&lt;/span>(&lt;span style="color:#a6e22e">id&lt;/span>) {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Task &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> deleted`&lt;/span>);
}
&lt;span style="color:#75715e">//add task
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">addTask&lt;/span>(&lt;span style="color:#a6e22e">task&lt;/span>) {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Task &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">task&lt;/span>.&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> added`&lt;/span>);
}
&lt;span style="color:#75715e">//edit task
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">editTask&lt;/span>(&lt;span style="color:#a6e22e">id&lt;/span>, &lt;span style="color:#a6e22e">changes&lt;/span>) {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Task &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> edited`&lt;/span>);
}
&lt;span style="color:#75715e">//complete task
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">completeTask&lt;/span>(&lt;span style="color:#a6e22e">id&lt;/span>) {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">`Task &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> completed`&lt;/span>);
}
&lt;span style="color:#66d9ef">export&lt;/span> {
&lt;span style="color:#a6e22e">userSignIn&lt;/span>,
&lt;span style="color:#a6e22e">userSignOut&lt;/span>,
&lt;span style="color:#a6e22e">deleteTask&lt;/span>,
&lt;span style="color:#a6e22e">addTask&lt;/span>,
&lt;span style="color:#a6e22e">editTask&lt;/span>,
&lt;span style="color:#a6e22e">completeTask&lt;/span>
};
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="quand-cela-me-sera-t-il-utile-" >Quand cela me sera-t-il utile ?
&lt;span>
&lt;a href="#quand-cela-me-sera-t-il-utile-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Cet article détaille précisément l&amp;rsquo;utilisation des modules avec des exemples concrets. L&amp;rsquo;article me sera alors très utile dans de nombreux projets futurs afin de rendre mon code plus structuré et lisible.&lt;/p></description></item><item><title>Expérimentation : ElectronJS</title><link>https://paulmairot.github.io/LabVeilleTech/post/electron/</link><pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/electron/</guid><description>&lt;p>Test de ElectronJS, un cadre open-source qui permet de créer des applications de bureau multiplateformes en utilisant JavaScript, HTML et CSS. Il est basé sur le moteur Chromium de Google et Node.js, et permet aux développeurs de construire des applications qui fonctionnent sur Windows, Mac et Linux en utilisant une seule base de code. Il est utilisé pour créer des applications de bureau telles que Visual Studio Code, Slack et Discord.&lt;/p>
&lt;p>&lt;a href="https://www.electronjs.org/docs/latest/">Lien vers la documentation&lt;/a>&lt;/p>
&lt;h2 id="comment-linstaller-" >Comment l&amp;rsquo;installer ?
&lt;span>
&lt;a href="#comment-linstaller-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>ElectronJS peut s&amp;rsquo;installer simplmenent sur n&amp;rsquo;importe quel projets utilisant NodeJS.&lt;/p>
&lt;pre tabindex="0">&lt;code>npm install --save-dev electron
&lt;/code>&lt;/pre>&lt;h2 id="utilisation" >Utilisation
&lt;span>
&lt;a href="#utilisation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Pour cette expérimentation, j&amp;rsquo;ai créé une simple application TO-DO avec une fonctionalité d&amp;rsquo;ajout à la liste. Une fois cette application fait, il n&amp;rsquo;y a qu&amp;rsquo;à ajouté le package electron et l&amp;rsquo;ajouter au script de démarrage :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#e6db74">&amp;#34;scripts&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;span style="color:#f92672">&amp;#34;start&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;electron .&amp;#34;&lt;/span>,
&lt;span style="color:#f92672">&amp;#34;test&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Nous devons ensuite configurer le fichier &lt;code>main.js&lt;/code> du projet afin de définir les options basiques d&amp;rsquo;Electron, comme par exemple la taille de la fenêtre ou le fichier à load lors du démarrage de l&amp;rsquo;application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">app&lt;/span>, &lt;span style="color:#a6e22e">BrowserWindow&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;electron&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">loadMainWindow&lt;/span> &lt;span style="color:#f92672">=&lt;/span> () =&amp;gt; {
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">mainWindow&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">BrowserWindow&lt;/span>({
&lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1200&lt;/span>,
&lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">800&lt;/span>,
&lt;span style="color:#a6e22e">webPreferences&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;span style="color:#a6e22e">nodeIntegration&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
}
});
&lt;span style="color:#a6e22e">mainWindow&lt;/span>.&lt;span style="color:#a6e22e">loadFile&lt;/span>(&lt;span style="color:#a6e22e">path&lt;/span>.&lt;span style="color:#a6e22e">join&lt;/span>(&lt;span style="color:#a6e22e">__dirname&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;index.html&amp;#34;&lt;/span>));
}
&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ready&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">loadMainWindow&lt;/span>);
&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">on&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;window-all-closed&amp;#34;&lt;/span>, () =&amp;gt; {
&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">platform&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;darwin&amp;#34;&lt;/span>) {
&lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">quit&lt;/span>();
}
});
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="notifications" >Notifications
&lt;span>
&lt;a href="#notifications">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Comme dit précedemment, Electron permet d&amp;rsquo;utiliser des fonctionnalités propres aux applications desktop. J&amp;rsquo;ai alors décidé d&amp;rsquo;implémenter un système de notifications à la TODO-list lors de l&amp;rsquo;ajout de tâche.&lt;/p>
&lt;p>Pour cela rien de plus simple. Il faut commencer par prévoir les notifications dans &lt;code>main.js&lt;/code> en ajoutant les lignes suivants :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">Notification&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;electron&amp;#34;&lt;/span>);
&lt;span style="color:#a6e22e">ipcMain&lt;/span>.&lt;span style="color:#a6e22e">handle&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;show-notification&amp;#39;&lt;/span>, (&lt;span style="color:#a6e22e">event&lt;/span>, ...&lt;span style="color:#a6e22e">args&lt;/span>) =&amp;gt; {
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">notification&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;New Task&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">`Added: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>
}
&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Notification&lt;/span>(&lt;span style="color:#a6e22e">notification&lt;/span>).&lt;span style="color:#a6e22e">show&lt;/span>()
});
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Il faut ensuite créer la notification lors de l&amp;rsquo;ajout d&amp;rsquo;une tâche. Notre &lt;code>script.js&lt;/code> gérant l&amp;rsquo;ajout de tâche ressemblera donc à ceci :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">ipcRenderer&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;electron&amp;#39;&lt;/span>);
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;list&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">newTask&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;newTask&amp;#34;&lt;/span>);
document.&lt;span style="color:#a6e22e">getElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;addTask&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;click&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;span style="color:#a6e22e">list&lt;/span>.&lt;span style="color:#a6e22e">insertAdjacentHTML&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;beforeend&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">`&amp;lt;li class=&amp;#34;list-group-item&amp;#34;&amp;gt;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">newTask&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;lt;/li&amp;gt;`&lt;/span>)
&lt;span style="color:#a6e22e">ipcRenderer&lt;/span>.&lt;span style="color:#a6e22e">invoke&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;show-notification&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">newTask&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span>);
&lt;span style="color:#a6e22e">newTask&lt;/span>.&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>;
});
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="résultat" >Résultat
&lt;span>
&lt;a href="#r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h4>&lt;p>&lt;img src="../ElectronNotification.png" alt="Notification Electron">&lt;/p>
&lt;h2 id="ce-que-jai-retenu" >Ce que j&amp;rsquo;ai retenu
&lt;span>
&lt;a href="#ce-que-jai-retenu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>J&amp;rsquo;avais déjà pu utiliser Electron pour des projets personels et professionels. Dans le domaine professionel, ce package m&amp;rsquo;a permis de fournir une application à des clients afin de leur simplifier l&amp;rsquo;utilisation de l&amp;rsquo;application développée.&lt;/p>
&lt;p>Electron est très complet et propose de nombreuses fonctionalité d&amp;rsquo;application desktop (ex.: Les notifications), je pense donc pouvoir le réutiliser dans mon avenir professionnel.&lt;/p></description></item><item><title>Article : The illusion of speed – why perceived performance matters</title><link>https://paulmairot.github.io/LabVeilleTech/post/illusion-speed/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/post/illusion-speed/</guid><description>&lt;p>L&amp;rsquo;importance de la performance perçue pour les utilisateurs d&amp;rsquo;une application ou d&amp;rsquo;un site web. Il explique que même si une application est rapide sur le plan technique, si l&amp;rsquo;utilisateur ne le ressent pas, il pourrait avoir une mauvaise expérience utilisateur.&lt;/p>
&lt;h2 id="résumé-de-larticle" >Résumé de l&amp;rsquo;article
&lt;span>
&lt;a href="#r%c3%a9sum%c3%a9-de-larticle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>L&amp;rsquo;article &amp;ldquo;The illusion of speed: Why perceived performance matters&amp;rdquo; décrit comment la performance perçue par l&amp;rsquo;utilisateur est tout aussi importante que la performance technique. Il explique que même si une application fonctionne rapidement sur le plan technique, cela ne signifie pas que l&amp;rsquo;utilisateur en a une perception de rapidité. Il présente des techniques pour améliorer la performance perçue tels que la mise en cache, la réduction du nombre de requêtes et la minimisation du temps de chargement pour améliorer l&amp;rsquo;expérience utilisateur. Il souligne également que les performances perçues sont de plus en plus importantes avec la croissance de l&amp;rsquo;utilisation des appareils mobiles et l&amp;rsquo;augmentation de la concurrence pour les utilisateurs.&lt;/p>
&lt;p>&lt;a href="https://dev.to/enterspeed/the-illusion-of-speed-why-perceived-performance-matters-f38">Lien vers l&amp;rsquo;article complet&lt;/a>&lt;/p>
&lt;h2 id="la-partie-étonnante" >La partie étonnante
&lt;span>
&lt;a href="#la-partie-%c3%a9tonnante">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;blockquote>
&lt;p>As we saw, people on average overestimate the passive state by 36%. If we have a page that takes 4 seconds to load, the user will actually experience this as 5 seconds (25% slower than it really is).&lt;/p>
&lt;/blockquote>
&lt;p>Il est expliqué que lorsque les visiteurs d&amp;rsquo;un site sont en mode passif, c&amp;rsquo;est-à-dire dans l&amp;rsquo;attente, le temps d&amp;rsquo;attente lui paraît 36% plus grand que ce qu&amp;rsquo;il est réellement (par exemple en temps d&amp;rsquo;attente de 4 secondes en mode passif sera perçu comme 5 secondes par l&amp;rsquo;utilisateur).&lt;/p>
&lt;blockquote>
&lt;p>The first second is in the active state, but in the next three seconds, the user risks moving to the passive state, which they then will experience as 4.08 seconds (3*1.36), which will result in a total perceived load time of 5 seconds (1 + 4.08).&lt;/p>
&lt;/blockquote>
&lt;h2 id="ce-quil-faut-retenir" >Ce qu&amp;rsquo;il faut retenir
&lt;span>
&lt;a href="#ce-quil-faut-retenir">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Lors de la conception d&amp;rsquo;application ou de site web, il faut toujours garder à l&amp;rsquo;esprit que même si celui-ci est performant sur le plan technique, l&amp;rsquo;utilisateur peut entrer dans un état d&amp;rsquo;attente. Il faut alors prévoir une solution afin de ne pas le perdre lors du processus d&amp;rsquo;attente.&lt;/p>
&lt;h2 id="quand-cela-me-sera-t-il-utile-" >Quand cela me sera-t-il utile ?
&lt;span>
&lt;a href="#quand-cela-me-sera-t-il-utile-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Les solutions proposées par cet article me seront utiles dans tous mes futurs projets web, dès lors qu&amp;rsquo;une phase de chargement sera à prévoir.&lt;/p></description></item><item><title/><link>https://paulmairot.github.io/LabVeilleTech/archives/</link><pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/archives/</guid><description/></item><item><title>Domaine</title><link>https://paulmairot.github.io/LabVeilleTech/about/subpage2/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/about/subpage2/</guid><description>&lt;p>Développement web (front-end)&lt;/p>
&lt;h2 id="mots-clés" >Mots-clés
&lt;span>
&lt;a href="#mots-cl%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>HTML&lt;/li>
&lt;li>CSS&lt;/li>
&lt;li>JavaScript&lt;/li>
&lt;li>UI/UX&lt;/li>
&lt;li>Responsive design&lt;/li>
&lt;li>Accessibilité&lt;/li>
&lt;li>Framework (React, Vue.js, Angular, etc.)&lt;/li>
&lt;li>Bibliothèques JavaScript (jQuery, Lodash, etc.)&lt;/li>
&lt;li>Tests unitaires&lt;/li>
&lt;li>Débogage&lt;/li>
&lt;li>Design web&lt;/li>
&lt;/ul>
&lt;h2 id="sous-domaine" >Sous domaine
&lt;span>
&lt;a href="#sous-domaine">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>HTML/CSS&lt;/li>
&lt;li>JavaScript&lt;/li>
&lt;li>React, Vue.js, Angular, etc.&lt;/li>
&lt;li>Interfaces utilisateur (UI) et expérience utilisateur (UX)&lt;/li>
&lt;li>Design responsif et adaptation aux différents écrans&lt;/li>
&lt;li>Accessibilité web&lt;/li>
&lt;li>Optimisation de la vitesse de chargement&lt;/li>
&lt;li>Intégration avec les API back-end&lt;/li>
&lt;li>Tests unitaires et de navigateur&lt;/li>
&lt;li>Débogage et développement de tests unitaires.&lt;/li>
&lt;/ul>
&lt;h2 id="pourquoi-ce-domaine-" >Pourquoi ce domaine ?
&lt;span>
&lt;a href="#pourquoi-ce-domaine-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Je trouve que la plupart des petits problèmes quotidiens peuvent être simplifiés grâce à des applications simples à créer. Mon exemple le plus concret est une application pour saisir les horaires des soignants de l&amp;rsquo;Hôpital Cantonal du Jura. Mon père y travaille comme infirmier depuis près de 40 ans. Chaque mois, il reçoit un horaire difficile à comprendre à première vue, composé de symboles et de chiffres. Mon père a donc pris l&amp;rsquo;habitude de noter son horaire pour le mois sur l&amp;rsquo;application calendrier de son iPhone. Cependant, cela posait des problèmes, car c&amp;rsquo;était une tâche longue et fastidieuse. Il se contentait de mettre un événement tout au long de la journée avec le type d&amp;rsquo;horaire comme nom. Cela n&amp;rsquo;a peu aidé à lire rapidement l&amp;rsquo;horaire.&lt;/p>
&lt;p>J&amp;rsquo;ai alors développé une petite application web pour résoudre ce problème. L&amp;rsquo;application demandait l&amp;rsquo;année et le mois, puis invitait l&amp;rsquo;utilisateur à choisir un horaire en affichant un jour après l&amp;rsquo;autre. Pour aller plus vite, il était également possible d&amp;rsquo;utiliser des raccourcis clavier. Une fois la saisie terminée, l&amp;rsquo;application générait un fichier .ical avec tous les horaires et les plages associées. Au lieu d&amp;rsquo;avoir des événements tout au long de la journée, on pouvait maintenant voir précisément quand un service commençait et se terminait. Le fichier pouvait alors facilement être importé dans l&amp;rsquo;application calendrier et le tour était joué.&lt;/p>
&lt;p>La tâche de saisie des horaires, qui prenait alors environ 30 minutes, ne durait plus que 30 à 60 secondes. C&amp;rsquo;est cette application qui m&amp;rsquo;a incité à développer d&amp;rsquo;autres applications de ce type et à choisir le développement web comme domaine.&lt;/p></description></item><item><title>Ikigai</title><link>https://paulmairot.github.io/LabVeilleTech/about/subpage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/about/subpage/</guid><description>&lt;p>&lt;img src="../../Ikigai_Paul.png" alt="Notification Electron">&lt;/p></description></item><item><title>À propos</title><link>https://paulmairot.github.io/LabVeilleTech/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulmairot.github.io/LabVeilleTech/about/</guid><description>&lt;p>Vous trouverez ici l&amp;rsquo;explication de mon domaine choisi ainsi que mon Ikigai ayant permis de déterminer mon domaine.&lt;/p></description></item></channel></rss>